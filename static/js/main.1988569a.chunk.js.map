{"version":3,"sources":["src/components/CountrySelector/country-selector.component.js","src/components/CitySelector/city-selector.component.js","src/components/AgeSlider/age-slider.component.js","src/components/FileUpload/file-upload.component.js","src/components/InputForm/input-form.component.js","src/actions/csv-data.action.js","src/actions/user-data.action.js","src/components/OutputForm/output-form.component.js","src/routes/HomePage/home-page.route.js","src/routes/NotFoundPage/not-found-page.route.js","src/routers/AppRouter.js","src/reducers/user-data.reducer.js","src/reducers/csv-data.reducer.js","src/store/configureStore.js","serviceWorker.js","index.js"],"names":["CountrySelector","country","handleChangeCountry","FormControl","InputLabel","id","Select","labelId","value","onChange","JSONData","countries","sort","map","data","index","MenuItem","key","CitySelector","city","handleChangeCity","cities","useStyles","makeStyles","theme","root","width","spacing","margin","height","iOSBoxShadow","marks","IOSSlider","withStyles","color","padding","thumb","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","background","track","rail","opacity","mark","markActive","Slider","CustomizedSlider","handleChangeAge","classes","className","Typography","gutterBottom","aria-label","defaultValue","valueLabelDisplay","FileUpload","onFileLoaded","InputForm","redirectToOutputTab","csvData","useSelector","state","dispatch","useDispatch","React","useState","name","setName","gender","setGender","age","setAge","email","setEmail","setCountry","setCity","csv","setCSV","moment","format","date","setDate","noValidate","autoComplete","Grid","container","item","xs","FormLabel","TextField","label","variant","fullWidth","e","target","component","RadioGroup","FormControlLabel","control","Radio","newValue","fileInfo","type","setCSVData","Button","disabled","Object","keys","length","onClick","console","log","toString","InputLabelProps","shrink","TextareaAutosize","rowsMax","rows","placeholder","userData","setUserData","OutputForm","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","TabPanel","props","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","HomePage","setValue","AppBar","position","Tabs","event","Tab","NotFoundPage","to","history","createHistory","AppRouter","path","exact","userDataReducerDefaultState","userDataReducer","action","csvDataReducerDefaultState","csvDataReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","Boolean","location","hostname","match","store","middlewares","thunk","createStore","combineReducers","applyMiddleware","configureStore","jsx","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1988569a.chunk.js","sourcesContent":["import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport JSONData from '../../assets/json/data.json';\r\n\r\nconst CountrySelector = ({ country, handleChangeCountry }) => {\r\n    return (\r\n        <FormControl>\r\n            <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={country}\r\n                onChange={handleChangeCountry}\r\n            >\r\n                {\r\n                    JSONData.countries\r\n                    .sort()\r\n                    .map((data, index) => {\r\n                        return (\r\n                            <MenuItem value={data} key={index}>{data}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport { CountrySelector as default }","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport JSONData from '../../assets/json/data.json';\r\n\r\nconst CitySelector = ({ city, handleChangeCity }) => {\r\n    return (\r\n        <FormControl>\r\n            <InputLabel id=\"demo-simple-select-label\">Cities</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={city}\r\n                onChange={handleChangeCity}\r\n            >\r\n                {\r\n                    JSONData.cities\r\n                    .sort()\r\n                    .map((data, index) => {\r\n                        return (\r\n                            <MenuItem value={data} key={index}>{data}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport { CitySelector as default }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst iOSBoxShadow =\r\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\r\n\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n    },\r\n    {\r\n        value: 30,\r\n    },\r\n    {\r\n        value: 60,\r\n    },\r\n    {\r\n        value: 120,\r\n    },\r\n];\r\n\r\nconst IOSSlider = withStyles({\r\n    root: {\r\n        color: '#3880ff',\r\n        height: 2,\r\n        padding: '15px 0',\r\n    },\r\n    thumb: {\r\n        height: 28,\r\n        width: 28,\r\n        backgroundColor: '#fff',\r\n        boxShadow: iOSBoxShadow,\r\n        marginTop: -14,\r\n        marginLeft: -14,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                boxShadow: iOSBoxShadow,\r\n            },\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 12px)',\r\n        top: -22,\r\n        '& *': {\r\n            background: 'transparent',\r\n            color: '#000',\r\n        },\r\n    },\r\n    track: {\r\n        height: 2,\r\n    },\r\n    rail: {\r\n        height: 2,\r\n        opacity: 0.5,\r\n        backgroundColor: '#bfbfbf',\r\n    },\r\n    mark: {\r\n        backgroundColor: '#bfbfbf',\r\n        height: 8,\r\n        width: 1,\r\n        marginTop: -3,\r\n    },\r\n    markActive: {\r\n        opacity: 1,\r\n        backgroundColor: 'currentColor',\r\n    },\r\n})(Slider);\r\n\r\nexport default function CustomizedSlider({ handleChangeAge }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography gutterBottom>Age</Typography>\r\n            <IOSSlider aria-label=\"ios slider\" defaultValue={60} marks={marks} valueLabelDisplay=\"on\" onChange={handleChangeAge} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport CSVReader from 'react-csv-reader';\r\n\r\nconst FileUpload = ({ onFileLoaded }) => {\r\n    return (\r\n        <CSVReader onFileLoaded={onFileLoaded} />\r\n    )\r\n}\r\n\r\nexport { FileUpload as default };","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport CountrySelector from '../../components/CountrySelector/country-selector.component';\r\nimport CitySelector from '../../components/CitySelector/city-selector.component';\r\nimport AgeSlider from '../../components/AgeSlider/age-slider.component';\r\nimport FileUpload from '../../components/FileUpload/file-upload.component';\r\n\r\nimport { setCSVData } from '../../actions/csv-data.action';\r\nimport { setUserData } from '../../actions/user-data.action';\r\n\r\nconst InputForm = ({ redirectToOutputTab }) => {\r\n    const csvData = useSelector(state => state.csvData);\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = React.useState();\r\n    const [gender, setGender] = React.useState();\r\n    const [age, setAge] = React.useState(60);\r\n    const [email, setEmail] = React.useState();\r\n    const [country, setCountry] = React.useState('Austria');\r\n    const [city, setCity] = React.useState('AMSTERDAM');\r\n    const [csv, setCSV] = React.useState();\r\n    const [date, setDate] = React.useState(moment().format('YYYY-MM-DD'));\r\n\r\n    const handleChangeName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const handleChangeGender = (e) => {\r\n        setGender(e.target.value);\r\n    }\r\n\r\n    const handleChangeAge = (e, newValue) => {\r\n        setAge(newValue);\r\n    }\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const onFileLoaded = (data, fileInfo) => {\r\n        dispatch(setCSVData(data));\r\n    };\r\n\r\n    const handleClickUpload = (e) => {\r\n        console.log(csvData);\r\n        setCSV(csvData.toString());\r\n    }\r\n\r\n    const handleChangeCountry = (e) => {\r\n        setCountry(e.target.value);\r\n    }\r\n    const handleChangeCity = (e) => {\r\n        setCity(e.target.value);\r\n    }\r\n    const handleChangeCSV = (e) => {\r\n        setCSV(e.target.value);\r\n    }\r\n    const handleChangeDate = (e) => {\r\n        setDate(e.target.value);\r\n    }\r\n\r\n    const isAllowedToContinue = () => {\r\n        if(name && gender && age && email && country && city && csv && date) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleClickContinue = (e) => {\r\n        let userData = {\r\n            name,\r\n            gender,\r\n            age,\r\n            email,\r\n            country,\r\n            city,\r\n            csv,\r\n            date\r\n        }\r\n        dispatch(setUserData(userData));\r\n        redirectToOutputTab();\r\n    }\r\n\r\n    return (\r\n        <form noValidate autoComplete=\"off\">\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <FormLabel>User:</FormLabel>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField label=\"Name\" variant=\"outlined\" fullWidth onChange={handleChangeName} />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Gender</FormLabel>\r\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={handleChangeGender}>\r\n                            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <AgeSlider handleChangeAge={handleChangeAge} />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    <TextField label=\"Email\" variant=\"outlined\" fullWidth onChange={handleChangeEmail} />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <CountrySelector country={country} handleChangeCountry={handleChangeCountry} />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <CitySelector city={city} handleChangeCity={handleChangeCity} />\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12}>\r\n                    <FormLabel>Data:</FormLabel>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <FileUpload onFileLoaded={onFileLoaded} />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Button variant=\"contained\" disabled={Object.keys(csvData).length === 0} onClick={handleClickUpload}>Upload</Button>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        defaultValue={date}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={handleChangeDate}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextareaAutosize\r\n                        className=\"full-width\"\r\n                        rowsMax={7}\r\n                        rows={7}\r\n                        aria-label=\"maximum height\"\r\n                        placeholder=\"Input CSV data\"\r\n                        value={csv}\r\n                        onChange={handleChangeCSV}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={8}></Grid>\r\n                <Grid item xs={4}>\r\n                    <Button variant=\"contained\" disabled={!isAllowedToContinue()} onClick={handleClickContinue}>Continue</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport { InputForm as default };","export const setCSVData = (csvData) => ({\r\n    type: 'SET_CSV_DATA',\r\n    csvData\r\n});","export const setUserData = (userData) => ({\r\n    type: 'SET_USER_DATA',\r\n    userData\r\n});","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst OutputForm = () => {\r\n    const userData = useSelector(state => state.userData);\r\n    const csvData = useSelector(state => state.csvData);\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={8}></Grid>\r\n            <Grid item xs={4}>{userData.name}, {userData.gender}, {userData.age}</Grid>\r\n            <Grid item xs={6}>{userData.date}</Grid>\r\n            <Grid item xs={6}>{userData.country}, {userData.city}, {userData.email}</Grid>\r\n            <Grid item xs={6}>\r\n                <TableContainer>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>{csvData[0][0]}</TableCell>\r\n                                <TableCell>{csvData[0][1]}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {csvData.map((data, index) => {\r\n                                if(index > 0) {\r\n                                    return (\r\n                                        <TableRow key={index}>\r\n                                            <TableCell>{data[0]}</TableCell>\r\n                                            <TableCell>{data[1]}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport { OutputForm as default }","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport InputForm from '../../components/InputForm/input-form.component';\r\nimport OutputForm from '../../components/OutputForm/output-form.component';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst HomePage = () => {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const redirectToOutputTab = () => {\r\n        setValue(1);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Input\" {...a11yProps(0)} />\r\n                    <Tab label=\"Output\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <InputForm redirectToOutputTab={redirectToOutputTab} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <OutputForm />\r\n            </TabPanel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { HomePage as default };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage = () => (\r\n    <div className=\"not-found-page page\">\r\n        404! - <Link to=\"/\">Go home</Link>\r\n    </div>\r\n)\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport createHistory from 'history/createBrowserHistory';\r\n\r\n// routes\r\nimport HomePage from '../routes/HomePage/home-page.route';\r\nimport NotFoundPage from '../routes/NotFoundPage/not-found-page.route';\r\n\r\nexport const history = createHistory();\r\n\r\nconst AppRouter = () => (\r\n    <Router history={history}>\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" component={HomePage} exact={true} />\r\n                <Route component={NotFoundPage}></Route>\r\n            </Switch>\r\n        </div>\r\n    </Router>\r\n)\r\n\r\nexport { AppRouter as default };","const userDataReducerDefaultState = {};\r\n\r\nconst userDataReducer = (state = userDataReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case 'SET_USER_DATA':\r\n            return action.userData;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { userDataReducer as default }","const csvDataReducerDefaultState = {};\r\n\r\nconst csvDataReducer = (state = csvDataReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case 'SET_CSV_DATA':\r\n            return action.csvData;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { csvDataReducer as default }","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\n// reducers\r\nimport userDataReducer from '../reducers/user-data.reducer';\r\nimport csvDataReducer from '../reducers/csv-data.reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default () => {\r\n    const middlewares = [thunk, sagaMiddleware];\r\n    const store = createStore(\r\n        combineReducers({\r\n            csvData: csvDataReducer,\r\n            userData: userDataReducer,\r\n        }),\r\n        composeEnhancers(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter from './src/routers/AppRouter';\nimport configureStore from './src/store/configureStore';\nimport './src/styles/styles.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nconst jsx = (\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>\n)\n\nReactDOM.render(\n  jsx,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}