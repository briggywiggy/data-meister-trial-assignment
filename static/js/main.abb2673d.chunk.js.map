{"version":3,"sources":["src/components/CountrySelector/country-selector.component.js","src/components/CitySelector/city-selector.component.js","src/components/AgeSlider/age-slider.component.js","src/components/FileUpload/file-upload.component.js","src/components/InputForm/input-form.component.js","src/actions/csv-data.action.js","src/actions/user-data.action.js","src/components/OutputTable/output-table.component.js","src/actions/paginated-data.action.js","src/components/OutputChart/output-chart.component.js","src/components/OutputForm/output-form.component.js","src/routes/HomePage/home-page.route.js","src/routes/NotFoundPage/not-found-page.route.js","src/routers/AppRouter.js","src/reducers/user-data.reducer.js","src/reducers/csv-data.reducer.js","src/reducers/paginated-data.reducer.js","src/store/configureStore.js","serviceWorker.js","index.js"],"names":["CountrySelector","countries","country","handleChangeCountry","FormControl","InputLabel","Select","value","onChange","map","data","index","MenuItem","key","CitySelector","cities","city","handleChangeCity","useStyles","makeStyles","theme","root","width","spacing","margin","height","iOSBoxShadow","marks","IOSSlider","withStyles","color","padding","thumb","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","background","track","rail","opacity","mark","markActive","Slider","CustomizedSlider","age","handleChangeAge","classes","className","Typography","gutterBottom","aria-label","defaultValue","valueLabelDisplay","max","FileUpload","onFileLoaded","InputForm","redirectToOutputTab","userData","useSelector","state","csvData","dispatch","useDispatch","React","useState","name","setName","errorName","setErrorName","helperTextName","setHelperTextName","gender","setGender","setAge","email","setEmail","errorEmail","setErrorEmail","helperTextEmail","setHelperTextEmail","JSONData","sort","setCountry","setCity","csv","setCSV","errorCSV","setErrorCSV","moment","format","date","setDate","requiredText","useEffect","Object","keys","length","console","log","match","validator","isEmail","noValidate","autoComplete","Grid","container","item","xs","FormLabel","TextField","label","variant","fullWidth","error","helperText","e","target","onBlur","component","RadioGroup","FormControlLabel","control","Radio","newValue","fileInfo","type","setCSVData","Button","disabled","onClick","result","window","confirm","string","forEach","additional","toString","id","InputLabelProps","shrink","TextareaAutosize","rowsMax","rows","placeholder","FormHelperText","children","setUserData","useStyles1","flexShrink","TablePaginationActions","props","useTheme","count","page","rowsPerPage","onChangePage","IconButton","event","direction","Math","ceil","useStyles2","table","minWidth","OutputTable","replace","split","csvHeader","csvBody","slice","setPage","setRowsPerPage","paginatedRows","emptyRows","min","paginatedData","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","scope","style","align","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","OutputChart","factory","scaleBand","valueField","argumentField","OutputForm","nameArray","lastName","trim","firstName","argument","parseFloat","TabPanel","other","role","hidden","aria-labelledby","Box","p","a11yProps","HomePage","setValue","AppBar","position","Tabs","Tab","NotFoundPage","to","history","createHistory","AppRouter","path","exact","userDataReducerDefaultState","userDataReducer","action","csvDataReducerDefaultState","csvDataReducer","paginatedDataReducerDefaultState","paginatedDataReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","Boolean","location","hostname","store","middlewares","thunk","createStore","combineReducers","applyMiddleware","configureStore","jsx","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.abb2673d.chunk.js","sourcesContent":["import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst CountrySelector = ({ countries, country, handleChangeCountry }) => {\r\n    return (\r\n        <FormControl>\r\n            <InputLabel>Country</InputLabel>\r\n            <Select\r\n                value={country}\r\n                onChange={handleChangeCountry}\r\n            >\r\n                {\r\n                    countries\r\n                    .map((data, index) => {\r\n                        return (\r\n                            <MenuItem value={data} key={index}>{data}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport { CountrySelector as default }","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst CitySelector = ({ cities, city, handleChangeCity }) => {\r\n    return (\r\n        <FormControl>\r\n            <InputLabel>City</InputLabel>\r\n            <Select\r\n                value={city}\r\n                onChange={handleChangeCity}\r\n            >\r\n                {\r\n                    cities\r\n                    .map((data, index) => {\r\n                        return (\r\n                            <MenuItem value={data} key={index}>{data}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport { CitySelector as default }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst iOSBoxShadow =\r\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\r\n\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n    },\r\n    {\r\n        value: 30,\r\n    },\r\n    {\r\n        value: 60,\r\n    },\r\n    {\r\n        value: 90,\r\n    },\r\n    {\r\n        value: 120,\r\n    },\r\n];\r\n\r\nconst IOSSlider = withStyles({\r\n    root: {\r\n        color: '#3880ff',\r\n        height: 2,\r\n        padding: '15px 0',\r\n    },\r\n    thumb: {\r\n        height: 28,\r\n        width: 28,\r\n        backgroundColor: '#fff',\r\n        boxShadow: iOSBoxShadow,\r\n        marginTop: -14,\r\n        marginLeft: -14,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                boxShadow: iOSBoxShadow,\r\n            },\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 12px)',\r\n        top: -22,\r\n        '& *': {\r\n            background: 'transparent',\r\n            color: '#000',\r\n        },\r\n    },\r\n    track: {\r\n        height: 2,\r\n    },\r\n    rail: {\r\n        height: 2,\r\n        opacity: 0.5,\r\n        backgroundColor: '#bfbfbf',\r\n    },\r\n    mark: {\r\n        backgroundColor: '#bfbfbf',\r\n        height: 8,\r\n        width: 1,\r\n        marginTop: -3,\r\n    },\r\n    markActive: {\r\n        opacity: 1,\r\n        backgroundColor: 'currentColor',\r\n    },\r\n})(Slider);\r\n\r\nexport default function CustomizedSlider({ age, handleChangeAge }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography gutterBottom>Age</Typography>\r\n            <IOSSlider aria-label=\"ios slider\"\r\n            value={age}\r\n            defaultValue={60}\r\n            marks={marks}\r\n            valueLabelDisplay=\"on\"\r\n            max={120}\r\n            onChange={handleChangeAge} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport CSVReader from 'react-csv-reader';\r\n\r\nconst FileUpload = ({ onFileLoaded }) => {\r\n    return (\r\n        <CSVReader onFileLoaded={onFileLoaded} />\r\n    )\r\n}\r\n\r\nexport { FileUpload as default };","import React from 'react';\r\nimport moment from 'moment';\r\nimport validator from 'validator';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport CountrySelector from '../../components/CountrySelector/country-selector.component';\r\nimport CitySelector from '../../components/CitySelector/city-selector.component';\r\nimport AgeSlider from '../../components/AgeSlider/age-slider.component';\r\nimport FileUpload from '../../components/FileUpload/file-upload.component';\r\n\r\nimport { setCSVData } from '../../actions/csv-data.action';\r\nimport { setUserData } from '../../actions/user-data.action';\r\n\r\nimport JSONData from '../../assets/json/data.json';\r\n\r\nconst InputForm = ({ redirectToOutputTab }) => {\r\n    const userData = useSelector(state => state.userData);\r\n    const csvData = useSelector(state => state.csvData);\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = React.useState(\"\");\r\n    const [errorName, setErrorName] = React.useState(false);\r\n    const [helperTextName, setHelperTextName] = React.useState(\"\");\r\n\r\n    const [gender, setGender] = React.useState(\"female\");\r\n    const [age, setAge] = React.useState(60);\r\n\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [errorEmail, setErrorEmail] = React.useState(false);\r\n    const [helperTextEmail, setHelperTextEmail] = React.useState(\"\");\r\n\r\n    const [country, setCountry] = React.useState(JSONData.countries.sort()[0]);\r\n    const [city, setCity] = React.useState(JSONData.cities[country].sort()[0]);\r\n\r\n    const [csv, setCSV] = React.useState();\r\n    const [errorCSV, setErrorCSV] = React.useState(false);\r\n\r\n    const [date, setDate] = React.useState(moment().format('YYYY-MM-DD'));\r\n\r\n    const requiredText = \"This is a required field\";\r\n\r\n    const handleChangeName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const handleBlurName = (e) => {\r\n        if (!e.target.value) {\r\n            setErrorName(true);\r\n            setHelperTextName(requiredText);\r\n        }\r\n    }\r\n\r\n    const handleChangeGender = (e) => {\r\n        setGender(e.target.value);\r\n    }\r\n\r\n    const handleChangeAge = (e, newValue) => {\r\n        setAge(newValue);\r\n    }\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleBlurEmail = (e) => {\r\n        if (!e.target.value) {\r\n            setErrorEmail(true);\r\n            setHelperTextEmail(requiredText);\r\n        }\r\n    }\r\n\r\n    const onFileLoaded = (data, fileInfo) => {\r\n        dispatch(setCSVData(data));\r\n    };\r\n\r\n    const handleClickUpload = (e) => {\r\n        let result;\r\n        if (csv) {\r\n            result = window.confirm(\"Are you sure you want to overwrite contents?\")\r\n        }\r\n        if (!csv || result) {\r\n            let string = \"\";\r\n            csvData.forEach((data, index) => {\r\n                let additional = (index !== csvData.length - 1) ? \",\\n\" : \"\";\r\n                string += data.toString() + additional;\r\n            })\r\n            setCSV(string);\r\n        }\r\n    }\r\n\r\n    const handleChangeCountry = (e) => {\r\n        setCountry(e.target.value);\r\n    }\r\n    const handleChangeCity = (e) => {\r\n        setCity(e.target.value);\r\n    }\r\n    const handleChangeCSV = (e) => {\r\n        setCSV(e.target.value);\r\n    }\r\n    const handleBlurCSV = (e) => {\r\n        if (!e.target.value) {\r\n            setErrorCSV(true);\r\n        }\r\n    }\r\n    const handleChangeDate = (e) => {\r\n        setDate(e.target.value);\r\n    }\r\n\r\n    const isAllowedToContinue = () => {\r\n        if (\r\n            name &&\r\n            !errorName &&\r\n            gender &&\r\n            age &&\r\n            email &&\r\n            !errorEmail &&\r\n            country &&\r\n            city &&\r\n            csv &&\r\n            date) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleClickContinue = (e) => {\r\n        let userData = {\r\n            name,\r\n            gender,\r\n            age,\r\n            email,\r\n            country,\r\n            city,\r\n            csv,\r\n            date\r\n        }\r\n        dispatch(setUserData(userData));\r\n        redirectToOutputTab();\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (Object.keys(userData).length > 0) {\r\n            setName(userData.name);\r\n            setGender(userData.gender);\r\n            setAge(userData.age);\r\n            setEmail(userData.email);\r\n            setCountry(userData.country);\r\n            setCity(userData.city);\r\n            setCSV(userData.csv);\r\n            setDate(userData.date);\r\n        }\r\n        console.log('userData', userData);\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        if (name) {\r\n            if (name.match(/^[A-Za-z0-9_']+\\s?,\\s?[A-Za-z0-9_']+$/g)) {\r\n                setErrorName(false);\r\n                setHelperTextName(\"\");\r\n            } else {\r\n                setErrorName(true);\r\n                setHelperTextName(\"Name format should be [<Last_Name>, <First_Name>]\")\r\n            }\r\n        }\r\n    }, [name])\r\n\r\n    React.useEffect(() => {\r\n        if (email) {\r\n            if (validator.isEmail(email)) {\r\n                setErrorEmail(false);\r\n                setHelperTextEmail(\"\");\r\n            } else {\r\n                setErrorEmail(true);\r\n                setHelperTextEmail(\"This is not a valid email\");\r\n            }\r\n        }\r\n    }, [email])\r\n\r\n    React.useEffect(() => {\r\n        setCity(JSONData.cities[country].sort()[0]);\r\n    }, [country])\r\n\r\n    React.useEffect(() => {\r\n        if (csv) {\r\n            setErrorCSV(false);\r\n        }\r\n    }, [csv])\r\n\r\n    return (\r\n        <form noValidate autoComplete=\"off\">\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <FormLabel>User:</FormLabel>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        value={name}\r\n                        fullWidth\r\n                        error={errorName}\r\n                        helperText={helperTextName}\r\n                        onChange={handleChangeName}\r\n                        onBlur={handleBlurName}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Gender</FormLabel>\r\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={gender} onChange={handleChangeGender}>\r\n                            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <AgeSlider age={age} handleChangeAge={handleChangeAge} />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n                        value={email}\r\n                        fullWidth\r\n                        error={errorEmail}\r\n                        helperText={helperTextEmail}\r\n                        onBlur={handleBlurEmail}\r\n                        onChange={handleChangeEmail}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <CountrySelector countries={JSONData.countries.sort()} country={country} handleChangeCountry={handleChangeCountry} />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <CitySelector cities={JSONData.cities[country].sort()} city={city} handleChangeCity={handleChangeCity} />\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12}>\r\n                    <FormLabel>Data:</FormLabel>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <FileUpload onFileLoaded={onFileLoaded} />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Button variant=\"contained\" disabled={Object.keys(csvData).length === 0} onClick={handleClickUpload}>Upload</Button>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        value={date}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={handleChangeDate}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextareaAutosize\r\n                        className=\"full-width\"\r\n                        rowsMax={7}\r\n                        rows={7}\r\n                        aria-label=\"maximum height\"\r\n                        placeholder=\"Input CSV data\"\r\n                        value={csv}\r\n                        onChange={handleChangeCSV}\r\n                        onBlur={handleBlurCSV}\r\n                    />\r\n                    {errorCSV && <FormHelperText children={requiredText} error />}\r\n                </Grid>\r\n                <Grid item xs={8}></Grid>\r\n                <Grid item xs={4}>\r\n                    <Button variant=\"contained\" disabled={!isAllowedToContinue()} onClick={handleClickContinue}>Continue</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport { InputForm as default };","export const setCSVData = (csvData) => ({\r\n    type: 'SET_CSV_DATA',\r\n    csvData\r\n});","export const setUserData = (userData) => ({\r\n    type: 'SET_USER_DATA',\r\n    userData\r\n});","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setPaginatedData } from '../../actions/paginated-data.action';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n    table: {\r\n        minWidth: 500,\r\n    },\r\n});\r\n\r\nconst OutputTable = () => {\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector(state => state.userData);\r\n    const match = userData.csv\r\n    .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n    .match(/[^,]+,[^,]+/g);\r\n    const csvData = match.map(data => {\r\n        return data = data.split(\",\");\r\n    });\r\n    // const csvData = useSelector(state => state.csvData);\r\n\r\n    const csvHeader = csvData[0];\r\n    const csvBody = csvData.slice(1);\r\n\r\n    const classes = useStyles2();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(4);\r\n    const paginatedRows = rowsPerPage > 0\r\n        ? csvBody.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n        : csvBody\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, csvBody.length - page * rowsPerPage);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        dispatch(setPaginatedData(paginatedRows));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [page, rowsPerPage])\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{csvHeader[0]}</TableCell>\r\n                        <TableCell>{csvHeader[1]}</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        paginatedRows.map((row, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row[0]}\r\n                                </TableCell>\r\n                                <TableCell style={{ width: 160 }} align=\"right\">\r\n                                    {row[1]}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n\r\n                    {emptyRows > 0 && (\r\n                        <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                    )}\r\n                </TableBody>\r\n                <TableFooter>\r\n                    <TableRow>\r\n                        <TablePagination\r\n                            // rowsPerPageOptions={[4, { label: 'All', value: -1 }]}\r\n                            rowsPerPageOptions={[4]}\r\n                            colSpan={3}\r\n                            count={csvBody.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            SelectProps={{\r\n                                inputProps: { 'aria-label': 'rows per page' },\r\n                                native: true,\r\n                            }}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </TableRow>\r\n                </TableFooter>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nexport { OutputTable as default }","export const setPaginatedData = (paginatedData) => ({\r\n    type: 'SET_PAGINATED_DATA',\r\n    paginatedData\r\n});","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    Chart,\r\n    BarSeries\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { scaleBand } from '@devexpress/dx-chart-core';\r\nimport { ArgumentScale, Stack } from '@devexpress/dx-react-chart';\r\n\r\nconst OutputChart = ({ data }) => {\r\n\r\n    return (\r\n        <Paper>\r\n            <Chart\r\n                data={data}\r\n            >\r\n                <ArgumentScale factory={scaleBand} />\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n\r\n                <BarSeries valueField=\"value\" argumentField=\"argument\" />\r\n                <Stack />\r\n            </Chart>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nexport { OutputChart as default };\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport OutputTable from '../OutputTable/output-table.component';\r\nimport OutputChart from '../OutputChart/output-chart.component';\r\n\r\nconst OutputForm = () => {\r\n    const userData = useSelector(state => state.userData);\r\n    const paginatedData = useSelector(state => state.paginatedData);\r\n    const nameArray = userData.name.split(','),\r\n        lastName = nameArray[0].trim(),\r\n        firstName = nameArray[1].trim();\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12} align=\"right\">\r\n                <Typography gutterBottom>{firstName} {lastName}, {userData.gender}, {userData.age}</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography gutterBottom>{userData.date}</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} align=\"right\">\r\n                <Typography gutterBottom>{userData.country}, {userData.city}, {userData.email}</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <OutputTable />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <OutputChart data={Object.keys(paginatedData)\r\n                    .map(key => {\r\n                        return { argument: paginatedData[key][0], value: parseFloat(paginatedData[key][1]) }\r\n                    })} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport { OutputForm as default }","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport InputForm from '../../components/InputForm/input-form.component';\r\nimport OutputForm from '../../components/OutputForm/output-form.component';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst HomePage = () => {\r\n    const userData = useSelector(state => state.userData);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const redirectToOutputTab = () => {\r\n        setValue(1);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Input\" {...a11yProps(0)} />\r\n                    <Tab label=\"Output\" {...a11yProps(1)} disabled={Object.keys(userData).length === 0} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <InputForm redirectToOutputTab={redirectToOutputTab} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <OutputForm />\r\n            </TabPanel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { HomePage as default };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage = () => (\r\n    <div className=\"not-found-page page\">\r\n        404! - <Link to=\"/\">Go home</Link>\r\n    </div>\r\n)\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport createHistory from 'history/createBrowserHistory';\r\n\r\n// routes\r\nimport HomePage from '../routes/HomePage/home-page.route';\r\nimport NotFoundPage from '../routes/NotFoundPage/not-found-page.route';\r\n\r\nexport const history = createHistory();\r\n\r\nconst AppRouter = () => (\r\n    <Router history={history}>\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" component={HomePage} exact={true} />\r\n                <Route path=\"/data-meister-trial-assignment/\" component={HomePage} exact={true} />\r\n                <Route component={NotFoundPage}></Route>\r\n            </Switch>\r\n        </div>\r\n    </Router>\r\n)\r\n\r\nexport { AppRouter as default };","const userDataReducerDefaultState = {};\r\n\r\nconst userDataReducer = (state = userDataReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case 'SET_USER_DATA':\r\n            return action.userData;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { userDataReducer as default }","const csvDataReducerDefaultState = {};\r\n\r\nconst csvDataReducer = (state = csvDataReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case 'SET_CSV_DATA':\r\n            return action.csvData;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { csvDataReducer as default }","const paginatedDataReducerDefaultState = {};\r\n\r\nconst paginatedDataReducer = (state = paginatedDataReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case 'SET_PAGINATED_DATA':\r\n            return action.paginatedData;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { paginatedDataReducer as default }","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\n// reducers\r\nimport userDataReducer from '../reducers/user-data.reducer';\r\nimport csvDataReducer from '../reducers/csv-data.reducer';\r\nimport paginatedDataReducer from '../reducers/paginated-data.reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default () => {\r\n    const middlewares = [thunk, sagaMiddleware];\r\n    const store = createStore(\r\n        combineReducers({\r\n            csvData: csvDataReducer,\r\n            userData: userDataReducer,\r\n            paginatedData: paginatedDataReducer,\r\n        }),\r\n        composeEnhancers(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter from './src/routers/AppRouter';\nimport configureStore from './src/store/configureStore';\nimport './src/styles/styles.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nconst jsx = (\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>\n)\n\nReactDOM.render(\n  jsx,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}